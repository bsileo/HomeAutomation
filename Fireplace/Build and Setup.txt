Fireplace Build / Install Notes


1. Install Pi Desktop with auto start:

        country=US
        ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
        update_config=1

        network={
        ssid="Sileo"
        psk="max=-hank"
        }

        touch ssh on boot drive

sudo apt-get update


1. Setup Touchscreen:

https://learn.adafruit.com/adafruit-2-8-pitft-capacitive-touch/easy-install-2

cd ~
sudo apt-get install -y git python3-pip
sudo pip3 install --upgrade adafruit-python-shell click==7.0
git clone https://github.com/adafruit/Raspberry-Pi-Installer-Scripts.git
cd Raspberry-Pi-Installer-Scripts
sudo python3 adafruit-pitft.py --display=28c --rotation=90 --install-type=fbcp


sudo raspi-config
  -> Setup to auto boot to desktop as pi user
  -> Turn on i2C interface for relays    (https://wiki.52pi.com/index.php?title=EP-0099)


[OLD way] Copy autostart into ~/.config/lxsessions/LXDE-pi/autostart


Install TSLIB for touch screen configuration:
https://www.impulseadventure.com/elec/rpi-install-tslib.html

X11 Calibration  https://learn.adafruit.com/adafruit-pitft-28-inch-resistive-touchscreen-display-raspberry-pi/resistive-touchscreen-manual-install-calibrate#x-calibration
sudo apt-get install libxaw7-dev libxxf86vm-dev libxaw7-dev libxft-dev

Information on Relay Board:
https://wiki.52pi.com/index.php?title=EP-0099


2.  Python libraries needed:  (pip)
        Rpi.GPIO  0.6.3

        PyQT5:
        sudo apt-get install qt5-default pyqt5-dev pyqt5-dev-tools

3. Install Software:

git clone https://github.com/bsileo/HomeAutomation.git

    mainwindow.ui in QT Designer
    Fireplace_qt.sh, fireplace_qt.py, mainwindow.ui on pi

cd HomeAutomation/Fireplace/
chmod +x *.sh

4. Setup autostart
 mkdir /home/pi/.config/autostart
 nano /home/pi/.config/autostart/fireplace.desktop
Add this content:
[Desktop Entry]
Type=Application
Name=Fireplace
Exec=/home/pi/HomeAutomation/Fireplace/fireplace_qt.sh

cronttab -e  and add:
@reboot /home/pi/HomeAutomation/Fireplace/fireplace_api.sh >> /home/pi/fapi.log$



5. GUI Edits / Updates
Use QT Designer to edit mainwindow.ui
pip install pyqt5-tools
python -m PyQt5.uic.pyuic -x mainwindow.ui -o mainwindow.py
